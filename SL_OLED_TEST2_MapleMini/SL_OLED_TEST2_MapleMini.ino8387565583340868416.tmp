#define OLED_PIN_D7 22
#define OLED_PIN_D5 21
#define OLED_PIN_EN 20
#define OLED_PIN_RS 19

#define OLED_PIN_D6 8
#define OLED_PIN_D4 9
#define OLED_PIN_RW 10

#define OLED_PIN_PW 11

#define WIDTH    100
#define HEIGHT    16
#define GRAPHIC  200

const unsigned char font[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1
  0x3E, 0x5B, 0x4F, 0x5B, 0x3E, 0x00, // 2
  0x3E, 0x6B, 0x4F, 0x6B, 0x3E, 0x00, // 3
  0x1C, 0x3E, 0x7C, 0x3E, 0x1C, 0x00, // 4
  0x18, 0x3C, 0x7E, 0x3C, 0x18, 0x00, // 5
  0x1C, 0x57, 0x7D, 0x57, 0x1C, 0x00, // 6
  0x1C, 0x5E, 0x7F, 0x5E, 0x1C, 0x00, // 7
  0x00, 0x18, 0x3C, 0x18, 0x00, 0x00, // 8
  0xFF, 0xE7, 0xC3, 0xE7, 0xFF, 0x00, // 9
  0x00, 0x18, 0x24, 0x18, 0x00, 0x00, // 10
  0xFF, 0xE7, 0xDB, 0xE7, 0xFF, 0x00, // 11
  0x30, 0x48, 0x3A, 0x06, 0x0E, 0x00, // 12
  0x26, 0x29, 0x79, 0x29, 0x26, 0x00, // 13
  0x40, 0x7F, 0x05, 0x05, 0x07, 0x00, // 14
  0x40, 0x7F, 0x05, 0x25, 0x3F, 0x00, // 15
  0x5A, 0x3C, 0xE7, 0x3C, 0x5A, 0x00, // 16
  0x7F, 0x3E, 0x1C, 0x1C, 0x08, 0x00, // 17
  0x08, 0x1C, 0x1C, 0x3E, 0x7F, 0x00, // 18
  0x14, 0x22, 0x7F, 0x22, 0x14, 0x00, // 19
  0x5F, 0x5F, 0x00, 0x5F, 0x5F, 0x00, // 20
  0x06, 0x09, 0x7F, 0x01, 0x7F, 0x00, // 21
  0x00, 0x66, 0x89, 0x95, 0x6A, 0x00, // 22
  0x60, 0x60, 0x60, 0x60, 0x60, 0x00, // 23
  0x94, 0xA2, 0xFF, 0xA2, 0x94, 0x00, // 24
  0x08, 0x04, 0x7E, 0x04, 0x08, 0x00, // 25
  0x10, 0x20, 0x7E, 0x20, 0x10, 0x00, // 26
  0x08, 0x08, 0x2A, 0x1C, 0x08, 0x00, // 27
  0x08, 0x1C, 0x2A, 0x08, 0x08, 0x00, // 28
  0x1E, 0x10, 0x10, 0x10, 0x10, 0x00, // 29
  0x0C, 0x1E, 0x0C, 0x1E, 0x0C, 0x00, // 30
  0x30, 0x38, 0x3E, 0x38, 0x30, 0x00, // 31
  0x06, 0x0E, 0x3E, 0x0E, 0x06, 0x00, // 32
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 33
  0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, // 34
  0x00, 0x07, 0x00, 0x07, 0x00, 0x00, // 35
  0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00, // 36
  0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, // 37
  0x23, 0x13, 0x08, 0x64, 0x62, 0x00, // 38
  0x36, 0x49, 0x56, 0x20, 0x50, 0x00, // 39
  0x00, 0x08, 0x07, 0x03, 0x00, 0x00, // 40
  0x00, 0x1C, 0x22, 0x41, 0x00, 0x00, // 41
  0x00, 0x41, 0x22, 0x1C, 0x00, 0x00, // 42
  0x2A, 0x1C, 0x7F, 0x1C, 0x2A, 0x00, // 43
  0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, // 44
  0x00, 0x80, 0x70, 0x30, 0x00, 0x00, // 45
  0x08, 0x08, 0x08, 0x08, 0x08, 0x00, // 46
  0x00, 0x00, 0x60, 0x60, 0x00, 0x00, // 47
  0x20, 0x10, 0x08, 0x04, 0x02, 0x00, // 48
  0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00, // 49
  0x00, 0x42, 0x7F, 0x40, 0x00, 0x00, // 50
  0x72, 0x49, 0x49, 0x49, 0x46, 0x00, // 51
  0x21, 0x41, 0x49, 0x4D, 0x33, 0x00, // 52
  0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, // 53
  0x27, 0x45, 0x45, 0x45, 0x39, 0x00, // 54
  0x3C, 0x4A, 0x49, 0x49, 0x31, 0x00, // 55
  0x41, 0x21, 0x11, 0x09, 0x07, 0x00, // 56
  0x36, 0x49, 0x49, 0x49, 0x36, 0x00, // 57
  0x46, 0x49, 0x49, 0x29, 0x1E, 0x00, // 58
  0x00, 0x00, 0x14, 0x00, 0x00, 0x00, // 59
  0x00, 0x40, 0x34, 0x00, 0x00, 0x00, // 60
  0x00, 0x08, 0x14, 0x22, 0x41, 0x00, // 61
  0x14, 0x14, 0x14, 0x14, 0x14, 0x00, // 62
  0x00, 0x41, 0x22, 0x14, 0x08, 0x00, // 63
  0x02, 0x01, 0x59, 0x09, 0x06, 0x00, // 64
  0x3E, 0x41, 0x5D, 0x59, 0x4E, 0x00, // 65
  0x7C, 0x12, 0x11, 0x12, 0x7C, 0x00, // 66
  0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, // 67
  0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, // 68
  0x7F, 0x41, 0x41, 0x41, 0x3E, 0x00, // 69
  0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, // 70
  0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, // 71
  0x3E, 0x41, 0x41, 0x51, 0x73, 0x00, // 72
  0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, // 73
  0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, // 74
  0x20, 0x40, 0x41, 0x3F, 0x01, 0x00, // 75
  0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, // 76
  0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, // 77
  0x7F, 0x02, 0x1C, 0x02, 0x7F, 0x00, // 78
  0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00, // 79
  0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, // 80
  0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, // 81
  0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, // 82
  0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, // 83
  0x26, 0x49, 0x49, 0x49, 0x32, 0x00, // 84
  0x03, 0x01, 0x7F, 0x01, 0x03, 0x00, // 85
  0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, // 86
  0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, // 87
  0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00, // 88
  0x63, 0x14, 0x08, 0x14, 0x63, 0x00, // 89
  0x03, 0x04, 0x78, 0x04, 0x03, 0x00, // 90
  0x61, 0x59, 0x49, 0x4D, 0x43, 0x00, // 91
  0x00, 0x7F, 0x41, 0x41, 0x41, 0x00, // 92
  0x02, 0x04, 0x08, 0x10, 0x20, 0x00, // 93
  0x00, 0x41, 0x41, 0x41, 0x7F, 0x00, // 94
  0x04, 0x02, 0x01, 0x02, 0x04, 0x00, // 95
  0x40, 0x40, 0x40, 0x40, 0x40, 0x00, // 96
  0x00, 0x03, 0x07, 0x08, 0x00, 0x00, // 97
  0x20, 0x54, 0x54, 0x78, 0x40, 0x00, // 98
  0x7F, 0x28, 0x44, 0x44, 0x38, 0x00, // 99
  0x38, 0x44, 0x44, 0x44, 0x28, 0x00, // 100
  0x38, 0x44, 0x44, 0x28, 0x7F, 0x00, // 101
  0x38, 0x54, 0x54, 0x54, 0x18, 0x00, // 102
  0x00, 0x08, 0x7E, 0x09, 0x02, 0x00, // 103
  0x18, 0xA4, 0xA4, 0x9C, 0x78, 0x00, // 104
  0x7F, 0x08, 0x04, 0x04, 0x78, 0x00, // 105
  0x00, 0x44, 0x7D, 0x40, 0x00, 0x00, // 106
  0x20, 0x40, 0x40, 0x3D, 0x00, 0x00, // 107
  0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, // 108
  0x00, 0x41, 0x7F, 0x40, 0x00, 0x00, // 109
  0x7C, 0x04, 0x78, 0x04, 0x78, 0x00, // 110
  0x7C, 0x08, 0x04, 0x04, 0x78, 0x00, // 111
  0x38, 0x44, 0x44, 0x44, 0x38, 0x00, // 112
  0xFC, 0x18, 0x24, 0x24, 0x18, 0x00, // 113
  0x18, 0x24, 0x24, 0x18, 0xFC, 0x00, // 114
  0x7C, 0x08, 0x04, 0x04, 0x08, 0x00, // 115
  0x48, 0x54, 0x54, 0x54, 0x24, 0x00, // 116
  0x04, 0x04, 0x3F, 0x44, 0x24, 0x00, // 117
  0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00, // 118
  0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, // 119
  0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, // 120
  0x44, 0x28, 0x10, 0x28, 0x44, 0x00, // 121
  0x4C, 0x90, 0x90, 0x90, 0x7C, 0x00, // 122
  0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, // 123
  0x00, 0x08, 0x36, 0x41, 0x00, 0x00, // 124
  0x00, 0x00, 0x77, 0x00, 0x00, 0x00, // 125
  0x00, 0x41, 0x36, 0x08, 0x00, 0x00, // 126
  0x02, 0x01, 0x02, 0x04, 0x02, 0x00, // 127
  0x3C, 0x26, 0x23, 0x26, 0x3C, 0x00, // 128
  0x1E, 0xA1, 0xA1, 0x61, 0x12, 0x00, // 129
  0x3A, 0x40, 0x40, 0x20, 0x7A, 0x00, // 130
  0x38, 0x54, 0x54, 0x55, 0x59, 0x00, // 131
  0x21, 0x55, 0x55, 0x79, 0x41, 0x00, // 132
  0x21, 0x54, 0x54, 0x78, 0x41, 0x00, // 133
  0x21, 0x55, 0x54, 0x78, 0x40, 0x00, // 134
  0x20, 0x54, 0x55, 0x79, 0x40, 0x00, // 135
  0x0C, 0x1E, 0x52, 0x72, 0x12, 0x00, // 136
  0x39, 0x55, 0x55, 0x55, 0x59, 0x00, // 137
  0x39, 0x54, 0x54, 0x54, 0x59, 0x00, // 138
  0x39, 0x55, 0x54, 0x54, 0x58, 0x00, // 139
  0x00, 0x00, 0x45, 0x7C, 0x41, 0x00, // 140
  0x00, 0x02, 0x45, 0x7D, 0x42, 0x00, // 141
  0x00, 0x01, 0x45, 0x7C, 0x40, 0x00, // 142
  0xF0, 0x29, 0x24, 0x29, 0xF0, 0x00, // 143
  0xF0, 0x28, 0x25, 0x28, 0xF0, 0x00, // 144
  0x7C, 0x54, 0x55, 0x45, 0x00, 0x00, // 145
  0x20, 0x54, 0x54, 0x7C, 0x54, 0x00, // 146
  0x7C, 0x0A, 0x09, 0x7F, 0x49, 0x00, // 147
  0x32, 0x49, 0x49, 0x49, 0x32, 0x00, // 148
  0x32, 0x48, 0x48, 0x48, 0x32, 0x00, // 149
  0x32, 0x4A, 0x48, 0x48, 0x30, 0x00, // 150
  0x3A, 0x41, 0x41, 0x21, 0x7A, 0x00, // 151
  0x3A, 0x42, 0x40, 0x20, 0x78, 0x00, // 152
  0x00, 0x9D, 0xA0, 0xA0, 0x7D, 0x00, // 153
  0x39, 0x44, 0x44, 0x44, 0x39, 0x00, // 154
  0x3D, 0x40, 0x40, 0x40, 0x3D, 0x00, // 155
  0x3C, 0x24, 0xFF, 0x24, 0x24, 0x00, // 156
  0x48, 0x7E, 0x49, 0x43, 0x66, 0x00, // 157
  0x2B, 0x2F, 0xFC, 0x2F, 0x2B, 0x00, // 158
  0xFF, 0x09, 0x29, 0xF6, 0x20, 0x00, // 159
  0xC0, 0x88, 0x7E, 0x09, 0x03, 0x00, // 160
  0x20, 0x54, 0x54, 0x79, 0x41, 0x00, // 161
  0x00, 0x00, 0x44, 0x7D, 0x41, 0x00, // 162
  0x30, 0x48, 0x48, 0x4A, 0x32, 0x00, // 163
  0x38, 0x40, 0x40, 0x22, 0x7A, 0x00, // 164
  0x00, 0x7A, 0x0A, 0x0A, 0x72, 0x00, // 165
  0x7D, 0x0D, 0x19, 0x31, 0x7D, 0x00, // 166
  0x26, 0x29, 0x29, 0x2F, 0x28, 0x00, // 167
  0x26, 0x29, 0x29, 0x29, 0x26, 0x00, // 168
  0x30, 0x48, 0x4D, 0x40, 0x20, 0x00, // 169
  0x38, 0x08, 0x08, 0x08, 0x08, 0x00, // 170
  0x08, 0x08, 0x08, 0x08, 0x38, 0x00, // 171
  0x2F, 0x10, 0xC8, 0xAC, 0xBA, 0x00, // 172
  0x2F, 0x10, 0x28, 0x34, 0xFA, 0x00, // 173
  0x00, 0x00, 0x7B, 0x00, 0x00, 0x00, // 174
  0x08, 0x14, 0x2A, 0x14, 0x22, 0x00, // 175
  0x22, 0x14, 0x2A, 0x14, 0x08, 0x00, // 176
  0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, // 177
  0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x00, // 178
  0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, // 179
  0x10, 0x10, 0x10, 0xFF, 0x00, 0x00, // 180
  0x14, 0x14, 0x14, 0xFF, 0x00, 0x00, // 181
  0x10, 0x10, 0xFF, 0x00, 0xFF, 0x00, // 182
  0x10, 0x10, 0xF0, 0x10, 0xF0, 0x00, // 183
  0x14, 0x14, 0x14, 0xFC, 0x00, 0x00, // 184
  0x14, 0x14, 0xF7, 0x00, 0xFF, 0x00, // 185
  0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, // 186
  0x14, 0x14, 0xF4, 0x04, 0xFC, 0x00, // 187
  0x14, 0x14, 0x17, 0x10, 0x1F, 0x00, // 188
  0x10, 0x10, 0x1F, 0x10, 0x1F, 0x00, // 189
  0x14, 0x14, 0x14, 0x1F, 0x00, 0x00, // 190
  0x10, 0x10, 0x10, 0xF0, 0x00, 0x00, // 191
  0x00, 0x00, 0x00, 0x1F, 0x10, 0x00, // 192
  0x10, 0x10, 0x10, 0x1F, 0x10, 0x00, // 193
  0x10, 0x10, 0x10, 0xF0, 0x10, 0x00, // 194
  0x00, 0x00, 0x00, 0xFF, 0x10, 0x00, // 195
  0x10, 0x10, 0x10, 0x10, 0x10, 0x00, // 196
  0x10, 0x10, 0x10, 0xFF, 0x10, 0x00, // 197
  0x00, 0x00, 0x00, 0xFF, 0x14, 0x00, // 198
  0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, // 199
  0x00, 0x00, 0x1F, 0x10, 0x17, 0x00, // 200
  0x00, 0x00, 0xFC, 0x04, 0xF4, 0x00, // 201
  0x14, 0x14, 0x17, 0x10, 0x17, 0x00, // 202
  0x14, 0x14, 0xF4, 0x04, 0xF4, 0x00, // 203
  0x00, 0x00, 0xFF, 0x00, 0xF7, 0x00, // 204
  0x14, 0x14, 0x14, 0x14, 0x14, 0x00, // 205
  0x14, 0x14, 0xF7, 0x00, 0xF7, 0x00, // 206
  0x14, 0x14, 0x14, 0x17, 0x14, 0x00, // 207
  0x10, 0x10, 0x1F, 0x10, 0x1F, 0x00, // 208
  0x14, 0x14, 0x14, 0xF4, 0x14, 0x00, // 209
  0x10, 0x10, 0xF0, 0x10, 0xF0, 0x00, // 210
  0x00, 0x00, 0x1F, 0x10, 0x1F, 0x00, // 211
  0x00, 0x00, 0x00, 0x1F, 0x14, 0x00, // 212
  0x00, 0x00, 0x00, 0xFC, 0x14, 0x00, // 213
  0x00, 0x00, 0xF0, 0x10, 0xF0, 0x00, // 214
  0x10, 0x10, 0xFF, 0x10, 0xFF, 0x00, // 215
  0x14, 0x14, 0x14, 0xFF, 0x14, 0x00, // 216
  0x10, 0x10, 0x10, 0x1F, 0x00, 0x00, // 217
  0x00, 0x00, 0x00, 0xF0, 0x10, 0x00, // 218
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, // 219
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, // 220
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 221
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, // 222
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, // 223
  0x38, 0x44, 0x44, 0x38, 0x44, 0x00, // 224
  0x7C, 0x2A, 0x2A, 0x3E, 0x14, 0x00, // 225
  0x7E, 0x02, 0x02, 0x06, 0x06, 0x00, // 226
  0x02, 0x7E, 0x02, 0x7E, 0x02, 0x00, // 227
  0x63, 0x55, 0x49, 0x41, 0x63, 0x00, // 228
  0x38, 0x44, 0x44, 0x3C, 0x04, 0x00, // 229
  0x40, 0x7E, 0x20, 0x1E, 0x20, 0x00, // 230
  0x06, 0x02, 0x7E, 0x02, 0x02, 0x00, // 231
  0x99, 0xA5, 0xE7, 0xA5, 0x99, 0x00, // 232
  0x1C, 0x2A, 0x49, 0x2A, 0x1C, 0x00, // 233
  0x4C, 0x72, 0x01, 0x72, 0x4C, 0x00, // 234
  0x30, 0x4A, 0x4D, 0x4D, 0x30, 0x00, // 235
  0x30, 0x48, 0x78, 0x48, 0x30, 0x00, // 236
  0xBC, 0x62, 0x5A, 0x46, 0x3D, 0x00, // 237
  0x3E, 0x49, 0x49, 0x49, 0x00, 0x00, // 238
  0x7E, 0x01, 0x01, 0x01, 0x7E, 0x00, // 239
  0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x00, // 240
  0x44, 0x44, 0x5F, 0x44, 0x44, 0x00, // 241
  0x40, 0x51, 0x4A, 0x44, 0x40, 0x00, // 242
  0x40, 0x44, 0x4A, 0x51, 0x40, 0x00, // 243
  0x00, 0x00, 0xFF, 0x01, 0x03, 0x00, // 244
  0xE0, 0x80, 0xFF, 0x00, 0x00, 0x00, // 245
  0x08, 0x08, 0x6B, 0x6B, 0x08, 0x00, // 246
  0x36, 0x12, 0x36, 0x24, 0x36, 0x00, // 247
  0x06, 0x0F, 0x09, 0x0F, 0x06, 0x00, // 248
  0x00, 0x00, 0x18, 0x18, 0x00, 0x00, // 249
  0x00, 0x00, 0x10, 0x10, 0x00, 0x00, // 250
  0x30, 0x40, 0xFF, 0x01, 0x01, 0x00, // 251
  0x00, 0x1F, 0x01, 0x01, 0x1E, 0x00, // 252
  0x00, 0x19, 0x1D, 0x17, 0x12, 0x00, // 253
  0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, // 254
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 255
};


int bmp[WIDTH][HEIGHT] = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

byte graphic[GRAPHIC] = {
  B01000000, B00000000
  , B01111000, B00000000
  , B00111111, B00000000
  , B00001111, B11100000
  , B00001100, B11111000
  , B00001100, B00111111
  , B00001100, B00000111
  , B00001100, B00111111
  , B00001100, B11111000
  , B00001111, B11100000
  , B00111111, B00000000
  , B01111000, B00000000
  , B01000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B01111111, B11110000
  , B01111111, B11110000
  , B00000000, B01100000
  , B00000000, B00110000
  , B00000000, B00110000
  , B00000000, B00110000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00001111, B10000000
  , B00111111, B11100000
  , B01110000, B01110000
  , B01100000, B00110000
  , B01100000, B00110000
  , B01100000, B00110000
  , B01100000, B00110000
  , B00110000, B01100000
  , B01111111, B11111111
  , B01111111, B11111111
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00011111, B11110000
  , B00111111, B11110000
  , B01110000, B00000000
  , B01100000, B00000000
  , B01100000, B00000000
  , B01100000, B00000000
  , B00110000, B00000000
  , B01111111, B11110000
  , B01111111, B11110000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B01111111, B11110011
  , B01111111, B11110011
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B01111111, B11110000
  , B01111111, B11110000
  , B00000000, B01100000
  , B00000000, B00110000
  , B00000000, B00110000
  , B00000000, B00110000
  , B00000000, B01110000
  , B01111111, B11100000
  , B01111111, B11000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00001111, B10000000
  , B00111111, B11100000
  , B00110000, B01100000
  , B01100000, B00110000
  , B01100000, B00110000
  , B01100000, B00110000
  , B01100000, B00110000
  , B00110000, B01100000
  , B00111111, B11100000
  , B00001111, B10000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000011, B10000000
  , B00001111, B11100000
  , B00011100, B01110000
  , B00011001, B00110000
  , B00110001, B00011000
  , B00110001, B00011000
  , B00110001, B00011000
  , B00011001, B00110000
  , B00011100, B01110000
  , B00001111, B11100000
  , B00000011, B10000000
  , B00001111, B11100000
  , B00011100, B01110000
  , B00011001, B00110000
  , B00110001, B00011000
  , B00110111, B11011000
  , B00110001, B00011000
  , B00011001, B00110000
  , B00011100, B01110000
  , B00001111, B11100000
  , B00000011, B10000000

};
static byte graphic0[20] = {
  B00000000, B00000000
  , B00000111, B11100000
  , B00001111, B11110000
  , B00011000, B00011000
  , B00010000, B00001000
  , B00010000, B00001000
  , B00011000, B00011000
  , B00001111, B11110000
  , B00000111, B11100000
  , B00000000, B00000000
};
static byte graphic1[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00100000
  , B00000000, B00110000
  , B00011111, B11111000
  , B00011111, B11111000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
};
static byte graphic2[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00011000, B01100000
  , B00011100, B01110000
  , B00010110, B00011000
  , B00010011, B00001000
  , B00010001, B10001000
  , B00010000, B11111000
  , B00010000, B01110000
  , B00000000, B00000000
};
static byte graphic3[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00001100, B00110000
  , B00011100, B00111000
  , B00010000, B10001000
  , B00010000, B10001000
  , B00010000, B10001000
  , B00011111, B11111000
  , B00001111, B01110000
  , B00000000, B00000000
};
static byte graphic4[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00000011, B00000000
  , B00000011, B10000000
  , B00000010, B11100000
  , B00000010, B01111000
  , B00011111, B11111000
  , B00011111, B11111000
  , B00000010, B00000000
  , B00000000, B00000000
};
static byte graphic5[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00001100, B11111000
  , B00011100, B11111000
  , B00010000, B01001000
  , B00010000, B01001000
  , B00011000, B11001000
  , B00001111, B10001000
  , B00000111, B00001000
  , B00000000, B00000000
};
static byte graphic6[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00001111, B11100000
  , B00011111, B11110000
  , B00011001, B10011000
  , B00010000, B10001000
  , B00010001, B10001000
  , B00011111, B10011000
  , B00001111, B00010000
  , B00000000, B00000000
};
static byte graphic7[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00001000
  , B00000000, B00001000
  , B00011000, B00001000
  , B00011111, B00001000
  , B00000111, B11101000
  , B00000000, B11111000
  , B00000000, B00011000
  , B00000000, B00000000
};
static byte graphic8[20] = {
  B00000000, B00000000
  , B00001111, B01110000
  , B00011111, B11111000
  , B00010000, B10001000
  , B00010000, B10001000
  , B00010000, B10001000
  , B00011111, B11111000
  , B00001111, B01110000
  , B00000000, B00000000
  , B00000000, B00000000
};
static byte graphic9[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00001100, B11110000
  , B00011101, B11111000
  , B00010001, B00001000
  , B00010001, B00001000
  , B00011001, B10001000
  , B00001111, B11111000
  , B00000111, B11110000
  , B00000000, B00000000
};
static byte graphic_W[20] = {
  B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00011000, B00011000
  , B00011000, B00011000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
  , B00000000, B00000000
};




void setup()
{
  OLED_setup();
}


// -- LOOP  --------------------------------------------------------------
void loop()
{

  static int count = 0;
  String S = String(count, DEC);

  for (int i = 0; i <= GRAPHIC; i++ ) {
    graphic[i] = 0x00; //グラフィック変数のクリア
  }


  updateBmp();
  graphic_print(graphic);//グラフィック表示

  delay(500);

}
// -- END LOOP ----------------------------------------------------------







void updateBmp() {

  byte b = 0x00;
  for (int w = 0; w <= WIDTH; w++) {

    // column 0 - 7
    for (int h = 0; h <= 7; h++) {
      if (bmp[w][h] == 1) {
        b |= 1 << h;
      }
    }
    graphic[w * 2 = 1] = b;

    // colmun 8 - 15
    b = 0x00;
    for (int h = 8; h <= 15; h++) {
      if (bmp[w][h] == 1) {
        b |= 1 << (h - 8);
      }
    }
    graphic[w * 2] = b;

  }
}

void clearBmp() {
  for (int w = 0; w <= WIDTH; w++) {
    for (int h = 0; h <= HEIGHT; h++) {
      bmp[w][h] = 0;
    }
  }
}



void write4bits(uint8_t value) {
  digitalWrite(OLED_PIN_D7, (value >> 3) & 0x01);
  digitalWrite(OLED_PIN_D6, (value >> 2) & 0x01);
  digitalWrite(OLED_PIN_D5, (value >> 1) & 0x01);
  digitalWrite(OLED_PIN_D4, value & 0x01);
  pulseEnable();
}

void send(uint8_t value, uint8_t modeRS , uint8_t modeRW) {
  digitalWrite(OLED_PIN_RS, modeRS);
  digitalWrite(OLED_PIN_RW, modeRW);
  write4bits(value >> 4);
  write4bits(value);
}

void command(uint8_t value) {
  busy();
  send(value, LOW, LOW);
}

void data_write(uint8_t value) {
  busy();
  send(value, HIGH, LOW);
}

void pulseEnable() {
  digitalWrite(OLED_PIN_EN, LOW);
  delayMicroseconds(1);
  digitalWrite(OLED_PIN_EN, HIGH);
  delayMicroseconds(1);
  digitalWrite(OLED_PIN_EN, LOW);
}

void pinModeAll() {
  pinMode(OLED_PIN_RS, OUTPUT);
  pinMode(OLED_PIN_RW, OUTPUT);
  pinMode(OLED_PIN_EN, OUTPUT);
  pinMode(OLED_PIN_D4, OUTPUT);
  pinMode(OLED_PIN_D5, OUTPUT);
  pinMode(OLED_PIN_D6, OUTPUT);
  pinMode(OLED_PIN_D7, OUTPUT);
}

void busy() {
  pinMode(OLED_PIN_D7, INPUT);
  int busy = HIGH;
  while (busy) {
    digitalWrite(OLED_PIN_RS, LOW);
    digitalWrite(OLED_PIN_RW, HIGH);
    pulseEnable();
    busy = digitalRead(OLED_PIN_D7);
    pulseEnable();
  }
  pinMode(OLED_PIN_D7, OUTPUT);
}

void sync() {
  busy();
  digitalWrite(OLED_PIN_RS, LOW);
  digitalWrite(OLED_PIN_RW, LOW);
  for (int i = 0; i < 5; i++) {
    write4bits(0x0);
  }
}

void functionSet() {
  busy();
  digitalWrite(OLED_PIN_RS, LOW);
  digitalWrite(OLED_PIN_RW, LOW);
  write4bits(0x2);
  command(0x28);//Function Set[0 0 1 DL N F FT1 FT0]//
}

void displayOn() {
  command(0x0c);//Display ON/OFF Control [0 0 0 0 1 D C B]
}

void displayClear() {
  command(0x01);
}

void returnHome() {
  command(0x02);
}

void entryModeSet() {
  command(0x06); // Entry Mode Set [0 0 0 0 0 0 0 1 I/D S]
}

void graphicModeSet() {
  command(0x1f); // Cursor / Display Shift / Mode / Pwr[ 0 0 0 1 G/C PWR 1 1]

  //{I/D:INCREMENT/DECREMENT BIT [1:右 0:左]}カソールを動かす方向
  //{S:SHIFT ENTIRE DISPLAY CONTROL BIT [1:する 0:しない]}全体シフト
  //{D:DISPLAY ON/OFF BIT [1:ON 0:OFF]}ディスプレイの点灯
  //{C:CURSOR DISPLAY CONTROL BIT [1:ON 0:OFF]}カソールのありなし
  //{B:BLINKING CONTROL BIT [1:する 0:しない]}点滅するかどうか？
  //{S/C:[1:表示とカソール 0:カソール]}シフトするもの
  //{R/L:[1:右 0:左]}右左
  //{G/C:GRAPHIC MODE / CHARACTER MODE SELECTION [1:グラフィック 0:キャラクタ]}モード選択
  //{PWR:ENABLE/DISABLE INTERNAL POWER [1:ON 0:OFF]}DCDCコンバータのON・OFF
  //{DL:INTERFACE DATA LENGTH CONTROL BIT [1:8bit 0:4bit]}インタフェイス選択
  //{N:NUMBER OF DISPLAY LINE [1:2行 0:1行]}行数 //グラフィックモードの時は２行にしないと11×100ドットになるらしい。
  //{F:CHARACTER FONT SET [1:5×10 0:5×8]}フォントセット
  //{FT1:FONT TABLE SELECTION [1: 0:]} テーブルデフォ0
  //{FT0:FONT TABLE SELECTION [1: 0:]} テーブルデフォ0
}


/*-----------*/
void OLED_setup() { //初期化

  pinMode(OLED_PIN_PW, OUTPUT);
  digitalWrite(OLED_PIN_PW, LOW);
  delay(500);
  digitalWrite(OLED_PIN_PW, HIGH);
  delay(500);
  pinModeAll();
  sync();
  functionSet();
  displayOn();
  entryModeSet();
  graphicModeSet();
  displayClear();
  returnHome();
}
void OLED_Cursor(int col, int row) {
  command((0x80 | col));
  command((0x40 | row));
}

void graphic_input(int col, byte * p) { //表示用グラフィック書き換え
  for (int i = 1; i < 20; i = i + 2) {
    for (int i = 0; i < 20; i = i + 2) {
      graphic[i + col] |= p[i];
    }
  }
}

void graphic_print(byte * p) { //グラフィックを送信してのOLEDに表示
  returnHome();
  for (int i = 1; i < 200; i = i + 2) {
    data_write(p[i]);
  }
  for (int i = 0; i < 200; i = i + 2) {
    data_write(p[i]);
  }
}

